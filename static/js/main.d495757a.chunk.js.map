{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","feedback","FeedbackOptions","onIncrement","divButton","type","FeedbackButton","data-row","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","label","App","state","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","Math","round","handleIncrement","e","field","target","dataset","row","setState","prevState","this","Component","ReactDOM","render","document","querySelector"],"mappings":"gJACAA,EAAOC,QAAU,CAAC,SAAW,+B,4MCiBdC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,6BAASC,UAAWC,IAAOC,UACxBJ,GAAS,uDACTC,I,gBCJQ,SAASI,EAAT,GAA2C,IAAhBC,EAAe,EAAfA,YACxC,OACE,yBAAKJ,UAAWC,IAAOI,WACrB,4BACEC,KAAK,SACLN,UAAWC,IAAOM,eAClBC,WAAS,OACTC,QAASL,GAJX,QAQA,4BACEE,KAAK,SACLN,UAAWC,IAAOM,eAClBC,WAAS,UACTC,QAASL,GAJX,WAQA,4BACEE,KAAK,SACLN,UAAWC,IAAOM,eAClBC,WAAS,MACTC,QAASL,GAJX,QCpBN,IAQeM,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAKA,I,gBCCC,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,oCACE,0CACW,IAAVD,EACC,kBAAC,EAAD,CAAcL,QAAQ,sBAEtB,oCACE,4BACE,wBAAIX,UAAWC,IAAOiB,OACpB,wCACA,kCAAQL,EAAR,MAEF,wBAAIb,UAAWC,IAAOiB,OACpB,2CACA,kCAAQJ,EAAR,MAEF,wBAAId,UAAWC,IAAOiB,OACpB,uCACA,kCAAQH,EAAR,OAGJ,6BACE,yCACA,8BAAOC,IAET,6BACE,qDACA,8BAAOC,EAAP,Q,IChCSE,E,4MAYnBC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,mBAAqB,WAGnB,OAFYC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,I,EAK1EC,gCAAkC,WAIhC,OAHyBC,KAAKC,MAC3B,EAAKT,MAAMP,KAAO,EAAKQ,qBAAwB,M,EAKpDS,gBAAkB,SAACC,GACjB,IAAMC,EAAQD,EAAEE,OAAOC,QAAQC,IAC/B,EAAKC,UAAS,SAACC,GACb,OAAO,eACJL,EAAQK,EAAUL,GAAS,O,uDAKxB,IAAD,EACwBM,KAAKlB,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CAASjB,OAAK,GACZ,kBAACK,EAAD,CAAiBC,YAAakC,KAAKR,kBACnC,kBAAClB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,KAAKjB,qBACZJ,mBAAoBqB,KAAKX,0C,GAnDJY,a,MCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.d495757a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Statistics_feedback__2JQRi\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.modules.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.feedback}>\r\n      {title && <h2> Please leave feedback </h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.bool,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.modules.css\";\r\n\r\nexport default function FeedbackOptions({ onIncrement }) {\r\n  return (\r\n    <div className={styles.divButton}>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.FeedbackButton}\r\n        data-row=\"good\"\r\n        onClick={onIncrement}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.FeedbackButton}\r\n        data-row=\"neutral\"\r\n        onClick={onIncrement}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.FeedbackButton}\r\n        data-row=\"bad\"\r\n        onClick={onIncrement}\r\n      >\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onIncrement: PropTypes.func\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h2>{message}</h2>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <h3>Statistics</h3>\r\n      {total === 0 ? (\r\n        <Notification message=\"No feedback given\" />\r\n      ) : (\r\n        <>\r\n          <ul>\r\n            <li className={styles.label}>\r\n              <span>Good: </span>\r\n              <span> {good} </span>\r\n            </li>\r\n            <li className={styles.label}>\r\n              <span>Neutral: </span>\r\n              <span> {neutral} </span>\r\n            </li>\r\n            <li className={styles.label}>\r\n              <span>Bad: </span>\r\n              <span> {bad} </span>\r\n            </li>\r\n          </ul>\r\n          <div>\r\n            <span>Total: </span>\r\n            <span>{total}</span>\r\n          </div>\r\n          <div>\r\n            <span>Positive feedback: </span>\r\n            <span>{positivePercentage}%</span>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number,\r\n  positive: PropTypes.number\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Section from \"./components/Section\";\r\nimport FeedbackOptions from \"./components/FeedbackOptions\";\r\nimport Statistics from \"./components/Statistics\";\r\n\r\nexport default class App extends Component {\r\n  static propTypes = {\r\n    state: PropTypes.shape({\r\n      good: PropTypes.number.isRequired,\r\n      neutral: PropTypes.number.isRequired,\r\n      bad: PropTypes.number.isRequired,\r\n    }),\r\n    countTotalFeedback: PropTypes.func,\r\n    countPositiveFeedbackPercentage: PropTypes.func,\r\n    handleIncrement: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    let total = Object.values(this.state).reduce((acc, item) => acc + item, 0);\r\n    // let total = this.state.good + this.state.neutral + this.state.bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    let positivePercentage = Math.round(\r\n      (this.state.good / this.countTotalFeedback()) * 100\r\n    );\r\n    return positivePercentage;\r\n  };\r\n\r\n  handleIncrement = (e) => {\r\n    const field = e.target.dataset.row;\r\n    this.setState((prevState) => {\r\n      return {\r\n        [field]: prevState[field] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <>\r\n        <Section title>\r\n          <FeedbackOptions onIncrement={this.handleIncrement} />\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}